<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tsps.training.dao.ExerciseMapper">

  <select id="getTotal" resultType="java.lang.Long">
    select count(*) from exercise
  </select>


  <resultMap id="ExerciseList" type="com.tsps.training.vo.ExerciseListVO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="exercise_content" jdbcType="VARCHAR" property="content" />
    <result column="exercise_optionA" jdbcType="VARCHAR" property="optionA" />
    <result column="exercise_optionB" jdbcType="VARCHAR" property="optionB" />
    <result column="exercise_optionC" jdbcType="VARCHAR" property="optionC" />
    <result column="exercise_optionD" jdbcType="VARCHAR" property="optionD" />
    <result column="exercise_answer" jdbcType="VARCHAR" property="answer" />
    <result column="exercise_explain" jdbcType="VARCHAR" property="explain" />
    <result column="exercise_upload_time" jdbcType="TIMESTAMP" property="time" />
    <result column="score" jdbcType="INTEGER" property="score" />
  </resultMap>
  <select id="getExerciseList" resultMap="ExerciseList">
    select
    id, exercise_content, exercise_optionA, exercise_optionB, exercise_optionC, exercise_optionD,
    exercise_answer, exercise_explain, exercise_upload_time, score
    from exercise
    where employee_id = #{employeeId,jdbcType=INTEGER}
    limit 10
    offset #{page,jdbcType=INTEGER}
  </select>

  <select id="getList" resultMap="Exercise" parameterType="java.lang.Integer">
    select
    id, exercise_content, exercise_optionA, exercise_optionB, exercise_optionC, exercise_optionD,
    exercise_answer, exercise_explain,  score
    from exercise
    limit 10
    offset #{page,jdbcType=INTEGER}
  </select>





<resultMap id="Exercise" type="com.tsps.training.vo.ExerciseVO">
  <id column="id" jdbcType="INTEGER" property="id" />
  <result column="exercise_content" jdbcType="VARCHAR" property="content" />
  <result column="exercise_optionA" jdbcType="VARCHAR" property="optionA" />
  <result column="exercise_optionB" jdbcType="VARCHAR" property="optionB" />
  <result column="exercise_optionC" jdbcType="VARCHAR" property="optionC" />
  <result column="exercise_optionD" jdbcType="VARCHAR" property="optionD" />
  <result column="exercise_answer" jdbcType="VARCHAR" property="answer" />
  <result column="exercise_explain" jdbcType="VARCHAR" property="explain" />
  <result column="score" jdbcType="INTEGER" property="score" />
</resultMap>

  <select id="getTwentyExercise" resultMap="Exercise">
    select
    id, exercise_content, exercise_optionA, exercise_optionB, exercise_optionC, exercise_optionD,
    exercise_answer, exercise_explain,  score
    from exercise
    order by rand()
    limit 20
  </select>
  <resultMap id="BaseResultMap" type="com.tsps.training.entity.Exercise">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="exercise_content" jdbcType="VARCHAR" property="exerciseContent" />
    <result column="exercise_optionA" jdbcType="VARCHAR" property="exerciseOptiona" />
    <result column="exercise_optionB" jdbcType="VARCHAR" property="exerciseOptionb" />
    <result column="exercise_optionC" jdbcType="VARCHAR" property="exerciseOptionc" />
    <result column="exercise_optionD" jdbcType="VARCHAR" property="exerciseOptiond" />
    <result column="exercise_answer" jdbcType="VARCHAR" property="exerciseAnswer" />
    <result column="exercise_explain" jdbcType="VARCHAR" property="exerciseExplain" />
    <result column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <result column="exercise_upload_time" jdbcType="TIMESTAMP" property="exerciseUploadTime" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="score" jdbcType="INTEGER" property="score" />
  </resultMap>

<!--  <resultMap id="ExerciseList" type="com.tsps.util.ReturnExercise">-->
<!--    <id column="id" jdbcType="INTEGER" property="id" />-->
<!--    <result column="exercise_content" jdbcType="VARCHAR" property="content" />-->
<!--    <result column="exercise_optionA" jdbcType="VARCHAR" property="optionA" />-->
<!--    <result column="exercise_optionB" jdbcType="VARCHAR" property="optionB" />-->
<!--    <result column="exercise_optionC" jdbcType="VARCHAR" property="optionC" />-->
<!--    <result column="exercise_optionD" jdbcType="VARCHAR" property="optionD" />-->
<!--    <result column="exercise_answer" jdbcType="VARCHAR" property="answer" />-->
<!--    <result column="exercise_explain" jdbcType="VARCHAR" property="explain" />-->
<!--    <result column="exercise_upload_time" jdbcType="TIMESTAMP" property="time" />-->
<!--  </resultMap>-->
<!--  <sql id="ReturnExercise">-->
<!--    id, exercise_content, exercise_optionA, exercise_optionB, exercise_optionC, exercise_optionD,-->
<!--    exercise_answer, exercise_explain, exercise_upload_time-->
<!--  </sql>-->
<!--  <select id="selectByEmployeeId" parameterType="java.lang.Integer" resultMap="ExerciseList">-->
<!--    select-->
<!--    <include refid="ReturnExercise" />-->
<!--    from exercise-->
<!--    where employee_id = #{employeeId,jdbcType=INTEGER}-->
<!--  </select>-->



  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, exercise_content, exercise_optionA, exercise_optionB, exercise_optionC, exercise_optionD, 
    exercise_answer, exercise_explain, employee_id, exercise_upload_time, company_id, 
    score
  </sql>
  <select id="selectByExample" parameterType="com.tsps.training.entity.ExerciseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exercise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exercise
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exercise
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tsps.training.entity.ExerciseExample">
    delete from exercise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tsps.training.entity.Exercise">
    insert into exercise (id, exercise_content, exercise_optionA, 
      exercise_optionB, exercise_optionC, exercise_optionD, 
      exercise_answer, exercise_explain, employee_id, 
      exercise_upload_time, company_id, score
      )
    values (#{id,jdbcType=INTEGER}, #{exerciseContent,jdbcType=VARCHAR}, #{exerciseOptiona,jdbcType=VARCHAR}, 
      #{exerciseOptionb,jdbcType=VARCHAR}, #{exerciseOptionc,jdbcType=VARCHAR}, #{exerciseOptiond,jdbcType=VARCHAR}, 
      #{exerciseAnswer,jdbcType=VARCHAR}, #{exerciseExplain,jdbcType=VARCHAR}, #{employeeId,jdbcType=INTEGER}, 
      #{exerciseUploadTime,jdbcType=TIMESTAMP}, #{companyId,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tsps.training.entity.Exercise">
    insert into exercise
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="exerciseContent != null">
        exercise_content,
      </if>
      <if test="exerciseOptiona != null">
        exercise_optionA,
      </if>
      <if test="exerciseOptionb != null">
        exercise_optionB,
      </if>
      <if test="exerciseOptionc != null">
        exercise_optionC,
      </if>
      <if test="exerciseOptiond != null">
        exercise_optionD,
      </if>
      <if test="exerciseAnswer != null">
        exercise_answer,
      </if>
      <if test="exerciseExplain != null">
        exercise_explain,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="exerciseUploadTime != null">
        exercise_upload_time,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="score != null">
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="exerciseContent != null">
        #{exerciseContent,jdbcType=VARCHAR},
      </if>
      <if test="exerciseOptiona != null">
        #{exerciseOptiona,jdbcType=VARCHAR},
      </if>
      <if test="exerciseOptionb != null">
        #{exerciseOptionb,jdbcType=VARCHAR},
      </if>
      <if test="exerciseOptionc != null">
        #{exerciseOptionc,jdbcType=VARCHAR},
      </if>
      <if test="exerciseOptiond != null">
        #{exerciseOptiond,jdbcType=VARCHAR},
      </if>
      <if test="exerciseAnswer != null">
        #{exerciseAnswer,jdbcType=VARCHAR},
      </if>
      <if test="exerciseExplain != null">
        #{exerciseExplain,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="exerciseUploadTime != null">
        #{exerciseUploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tsps.training.entity.ExerciseExample" resultType="java.lang.Long">
    select count(*) from exercise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exercise
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.exerciseContent != null">
        exercise_content = #{record.exerciseContent,jdbcType=VARCHAR},
      </if>
      <if test="record.exerciseOptiona != null">
        exercise_optionA = #{record.exerciseOptiona,jdbcType=VARCHAR},
      </if>
      <if test="record.exerciseOptionb != null">
        exercise_optionB = #{record.exerciseOptionb,jdbcType=VARCHAR},
      </if>
      <if test="record.exerciseOptionc != null">
        exercise_optionC = #{record.exerciseOptionc,jdbcType=VARCHAR},
      </if>
      <if test="record.exerciseOptiond != null">
        exercise_optionD = #{record.exerciseOptiond,jdbcType=VARCHAR},
      </if>
      <if test="record.exerciseAnswer != null">
        exercise_answer = #{record.exerciseAnswer,jdbcType=VARCHAR},
      </if>
      <if test="record.exerciseExplain != null">
        exercise_explain = #{record.exerciseExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeId != null">
        employee_id = #{record.employeeId,jdbcType=INTEGER},
      </if>
      <if test="record.exerciseUploadTime != null">
        exercise_upload_time = #{record.exerciseUploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exercise
    set id = #{record.id,jdbcType=INTEGER},
      exercise_content = #{record.exerciseContent,jdbcType=VARCHAR},
      exercise_optionA = #{record.exerciseOptiona,jdbcType=VARCHAR},
      exercise_optionB = #{record.exerciseOptionb,jdbcType=VARCHAR},
      exercise_optionC = #{record.exerciseOptionc,jdbcType=VARCHAR},
      exercise_optionD = #{record.exerciseOptiond,jdbcType=VARCHAR},
      exercise_answer = #{record.exerciseAnswer,jdbcType=VARCHAR},
      exercise_explain = #{record.exerciseExplain,jdbcType=VARCHAR},
      employee_id = #{record.employeeId,jdbcType=INTEGER},
      exercise_upload_time = #{record.exerciseUploadTime,jdbcType=TIMESTAMP},
      company_id = #{record.companyId,jdbcType=INTEGER},
      score = #{record.score,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tsps.training.entity.Exercise">
    update exercise
    <set>
      <if test="exerciseContent != null">
        exercise_content = #{exerciseContent,jdbcType=VARCHAR},
      </if>
      <if test="exerciseOptiona != null">
        exercise_optionA = #{exerciseOptiona,jdbcType=VARCHAR},
      </if>
      <if test="exerciseOptionb != null">
        exercise_optionB = #{exerciseOptionb,jdbcType=VARCHAR},
      </if>
      <if test="exerciseOptionc != null">
        exercise_optionC = #{exerciseOptionc,jdbcType=VARCHAR},
      </if>
      <if test="exerciseOptiond != null">
        exercise_optionD = #{exerciseOptiond,jdbcType=VARCHAR},
      </if>
      <if test="exerciseAnswer != null">
        exercise_answer = #{exerciseAnswer,jdbcType=VARCHAR},
      </if>
      <if test="exerciseExplain != null">
        exercise_explain = #{exerciseExplain,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null">
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="exerciseUploadTime != null">
        exercise_upload_time = #{exerciseUploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tsps.training.entity.Exercise">
    update exercise
    set exercise_content = #{exerciseContent,jdbcType=VARCHAR},
      exercise_optionA = #{exerciseOptiona,jdbcType=VARCHAR},
      exercise_optionB = #{exerciseOptionb,jdbcType=VARCHAR},
      exercise_optionC = #{exerciseOptionc,jdbcType=VARCHAR},
      exercise_optionD = #{exerciseOptiond,jdbcType=VARCHAR},
      exercise_answer = #{exerciseAnswer,jdbcType=VARCHAR},
      exercise_explain = #{exerciseExplain,jdbcType=VARCHAR},
      employee_id = #{employeeId,jdbcType=INTEGER},
      exercise_upload_time = #{exerciseUploadTime,jdbcType=TIMESTAMP},
      company_id = #{companyId,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>