<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tsps.training.dao.PracticeMapper">
  <resultMap id="BaseResultMap" type="com.tsps.training.entity.Practice">
    <result column="exercise_id" jdbcType="INTEGER" property="exerciseId" />
    <result column="driver_id" jdbcType="INTEGER" property="driverId" />
    <result column="exam_id" jdbcType="INTEGER" property="examId" />
    <result column="state" jdbcType="CHAR" property="state" />
    <result column="collect" jdbcType="CHAR" property="collect" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
  </resultMap>

  <select id="getWrong" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from practice
    where driver_id = #{driverId,jdbcType=INTEGER}
    and state = #{state,jdbcType=CHAR}
    and collect != '3'
    order by exercise_id
    limit 10
    offset #{page,jdbcType=INTEGER}
  </select>
  <select id="getCollect" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from practice
    where driver_id = #{driverId,jdbcType=INTEGER}
    and collect = #{collect,jdbcType=CHAR}
    order by exercise_id
    limit 10
    offset #{page,jdbcType=INTEGER}
  </select>



  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    exercise_id, driver_id, exam_id, state, collect, score, answer
  </sql>
  <select id="selectByExample" parameterType="com.tsps.training.entity.PracticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from practice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.tsps.training.entity.PracticeExample">
    delete from practice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tsps.training.entity.Practice">
    insert into practice (exercise_id, driver_id, exam_id, 
      state, collect, score, answer
      )
    values (#{exerciseId,jdbcType=INTEGER}, #{driverId,jdbcType=INTEGER}, #{examId,jdbcType=INTEGER}, 
      #{state,jdbcType=CHAR}, #{collect,jdbcType=CHAR}, #{score,jdbcType=INTEGER}, #{answer,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tsps.training.entity.Practice">
    insert into practice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="exerciseId != null">
        exercise_id,
      </if>
      <if test="driverId != null">
        driver_id,
      </if>
      <if test="examId != null">
        exam_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="collect != null">
        collect,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="answer != null">
        answer,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="exerciseId != null">
        #{exerciseId,jdbcType=INTEGER},
      </if>
      <if test="driverId != null">
        #{driverId,jdbcType=INTEGER},
      </if>
      <if test="examId != null">
        #{examId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=CHAR},
      </if>
      <if test="collect != null">
        #{collect,jdbcType=CHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tsps.training.entity.PracticeExample" resultType="java.lang.Long">
    select count(*) from practice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update practice
    <set>
      <if test="record.exerciseId != null">
        exercise_id = #{record.exerciseId,jdbcType=INTEGER},
      </if>
      <if test="record.driverId != null">
        driver_id = #{record.driverId,jdbcType=INTEGER},
      </if>
      <if test="record.examId != null">
        exam_id = #{record.examId,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=CHAR},
      </if>
      <if test="record.collect != null">
        collect = #{record.collect,jdbcType=CHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.answer != null">
        answer = #{record.answer,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update practice
    set exercise_id = #{record.exerciseId,jdbcType=INTEGER},
      driver_id = #{record.driverId,jdbcType=INTEGER},
      exam_id = #{record.examId,jdbcType=INTEGER},
      state = #{record.state,jdbcType=CHAR},
      collect = #{record.collect,jdbcType=CHAR},
      score = #{record.score,jdbcType=INTEGER},
      answer = #{record.answer,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>